# ============================================================================
# SECURITY - Environment and Configuration Files
# ============================================================================
# Environment files containing API keys and secrets
.env
.env.local
.env.development
.env.test
.env.production
.env.staging
*.env
*.env.*

# API key files
*api_key*
*secret*
*token*
*credentials*
config/secrets.yml
config/database.yml

# Cloud provider configuration files
claude.env
openai.env
cloud.env
cloud_test.env
ollama.env
aws.env
gcp.env
azure.env

# ============================================================================
# PYTHON
# ============================================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ============================================================================
# MACOS
# ============================================================================
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# ============================================================================
# WINDOWS
# ============================================================================
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# ============================================================================
# LINUX
# ============================================================================
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# ============================================================================
# IDE AND EDITORS
# ============================================================================
# JetBrains IDEs (IntelliJ, PyCharm, WebStorm, etc.)
.idea/
*.iws
*.iml
*.ipr
out/

# Visual Studio Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*~
*.swp
*.swo
*~
.netrwhist

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Atom
.atom/

# Eclipse
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# CDT- autotools
.autotools

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Annotation Processing
.apt_generated/
.apt_generated_test/

# Scala IDE specific (Scala & Java development for Eclipse)
.cache-main
.scala_dependencies
.worksheet

# ============================================================================
# PROJECT SPECIFIC
# ============================================================================
# Test results and outputs
test_results/
results/
output/
outputs/
logs/
*.log

# Generated files
prompts_out/
debug_history.json
debug_dspy_history.py
debug_token_capture.py
test_history_*.json
test_history_*.py

# History and backup files
.history/
*.backup
*.bak
*~

# Temporary files
tmp/
temp/
*.tmp

# Data files (if they contain sensitive information)
# Uncomment if your data files contain sensitive information
# data/
# *.json
# *.csv
# *.xlsx

# Model files and caches
models/
*.model
*.pkl
*.pickle

# Claude settings (may contain sensitive info)
.claude/

# ============================================================================
# DOCUMENTATION AND NOTES
# ============================================================================
# Personal notes and drafts
NOTES.md
TODO.md
DRAFT*.md
*_DRAFT.*

# ============================================================================
# SYSTEM AND RUNTIME
# ============================================================================
# Process IDs
*.pid

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node_modules (if using Node.js tools)
node_modules/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# ============================================================================
# CLOUD AND DEPLOYMENT
# ============================================================================
# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Docker
.dockerignore
Dockerfile.local

# Kubernetes
*.kubeconfig

# Serverless Framework
.serverless/

# AWS
.aws/

# Google Cloud
.gcloud/

# ============================================================================
# DATABASES
# ============================================================================
# SQLite
*.db
*.sqlite
*.sqlite3

# PostgreSQL
*.pgsql

# MySQL
*.mysql

# ============================================================================
# MISCELLANEOUS
# ============================================================================
# Backup files
*.backup
*.bak
*~

# Archive files
*.zip
*.tar.gz
*.rar
*.7z

# Image files (if not needed in repo)
# *.jpg
# *.jpeg
# *.png
# *.gif
# *.bmp
# *.tiff
# *.svg

# Video files
*.mp4
*.avi
*.mov
*.wmv
*.flv

# Audio files
*.mp3
*.wav
*.flac
*.aac

# Large files
*.iso
*.dmg
*.pkg

# OS generated files
.DS_Store?
ehthumbs.db
Icon?
Thumbs.db

# ============================================================================
# END OF .gitignore
# ============================================================================
